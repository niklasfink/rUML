function Failure(e){this.message=e}function indexOf(e,t){if(e.indexOf)return e.indexOf(t);for(var n=0,r=e.length;r>n;++n)if(e[n]==t)return n;return-1}function test(e,t,n){for(var r=e,i=2;-1!==indexOf(allNames,e);)e=r+"_"+i,i++;return allNames.push(e),tests.push({name:e,func:t,expectedFail:n}),e}function testCM(e,t,n,r){return test(namespace+e,function(){var e=document.getElementById("testground"),r=window.cm=CodeMirror(e,n),i=!1;try{t(r),i=!0}finally{!i||verbose?e.style.visibility="visible":e.removeChild(r.getWrapperElement())}},r)}function runTests(e){function t(r){for(;;){if(r===tests.length)return running=!1,e("done");var i=tests[r],l=!1;if(filters.length){l=!0;for(var a=0;a<filters.length;a++)i.name.match(filters[a])&&(l=!1)}if(!l)break;e("skipped",i.name,u),r++}var s=i.expectedFail,f=+new Date,o=!1;try{var u=i.func()}catch(c){if(o=!0,s)e("expected",i.name);else if(c instanceof Failure)e("fail",i.name,c.message);else{var h=/(?:\bat |@).*?([^\/:]+):(\d+)/.exec(c.stack);h&&console.log(c.stack),e("error",i.name,c.toString()+(h?" ("+h[1]+":"+h[2]+")":""))}}if(o||(s?e("fail",i.name,u||"expected failure, but passed"):e("ok",i.name,u)),quit)return running=!1,null;var m=0;n+=+new Date-f,n>500&&(n=0,m=50),setTimeout(function(){t(r+1)},m)}var n=0;t(0)}function label(e,t){return t?e+" ("+t+")":e}function eq(e,t,n){if(e!=t)throw new Failure(label(e+" != "+t,n))}function near(e,t,n,r){if(Math.abs(e-t)>n)throw new Failure(label(e+" is not close to "+t+" ("+n+")",r))}function eqPos(e,t,n){function r(e){return"{line:"+e.line+",ch:"+e.ch+"}"}if(e!=t){if(null==e)throw new Failure(label("comparing null to "+r(t),n));if(null==t)throw new Failure(label("comparing "+r(e)+" to null",n));if(e.line!=t.line||e.ch!=t.ch)throw new Failure(label(r(e)+" != "+r(t),n))}}function is(e,t){if(!e)throw new Failure(label("assertion failed",t))}function countTests(){if(!filters.length)return tests.length;for(var e=0,t=0;t<tests.length;++t)for(var n=tests[t].name,r=0;r<filters.length;r++)if(n.match(filters[r])){++e;break}return e}function parseTestFilter(e){return/_\*$/.test(e)?new RegExp("^"+e.slice(0,e.length-2),"i"):new RegExp(e,"i")}var tests=[],filters=[],allNames=[];Failure.prototype.toString=function(){return this.message};var namespace="";